{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router\";\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [userId, setUserId] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [profession, setProfession] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [mark, setMark] = useState(null);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n  const location = useLocation();\n  const {\n    email,\n    id: userIdFromLocation,\n    role\n  } = location.state || {};\n  const checkUserRoleAccess = useUserRoleAccess(0);\n  useEffect(() => {\n    if (!checkUserRoleAccess()) {\n      return;\n    }\n    setUserId(userIdFromLocation);\n    setUserEmail(email);\n    setUserRole(role);\n\n    // Fetch data if it hasn't been fetched already\n    if (!profession || testQuestions.length === 0) {\n      Promise.all([fetch(`http://localhost:5000/get_prof/${id}`).then(response => response.json()), fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json())]).then(([professionData, testQuestionsData]) => {\n        setProfession(professionData.profession);\n        setTestQuestions(testQuestionsData);\n        setLoading(false);\n      }).catch(error => {\n        setError(\"Error fetching data. Please try again later.\");\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, [id, userIdFromLocation, email, role, checkUserRoleAccess, profession, testQuestions]);\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: selectedAnswer\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    let correctAnswers = 0;\n    testQuestions.forEach((question, index) => {\n      if (answers[index] === question.correct_answer) {\n        correctAnswers++;\n      }\n    });\n    const calculatedMark = Math.round(correctAnswers / testQuestions.length * 100);\n    const testData = {\n      prof_test_id: id,\n      user_id: userId,\n      mark: calculatedMark,\n      correct_answers_amount: correctAnswers,\n      incorrect_answers_amount: testQuestions.length - correctAnswers,\n      comment_on_results: \"Any comment you want to add\"\n    };\n    fetch(\"http://localhost:5000/save_test_results\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(testData)\n    }).then(response => response.json()).then(data => {\n      console.log(data.message);\n    }).catch(error => {\n      console.error(\"Error saving test results:\", error);\n    });\n    setMark(calculatedMark);\n    setCorrectAnswersCount(correctAnswers);\n    setSubmitted(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to this User, \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", userRole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), profession && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profession Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession Name: \", profession.profession_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", profession.profession_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [index + 1, \". \", question.question, \" Level: \", question.level_of_question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(question).slice(0, 4).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: submitted && option === question.correct_answer ? 'green' : submitted && answers[index] !== option ? 'red' : 'inherit'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question${index}`,\n                value: option,\n                checked: answers[index] === option,\n                onChange: () => handleAnswerChange(index, option),\n                disabled: submitted // Disable input after submission\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), submitted && answers[index] !== option && option === question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'green'\n              },\n              children: \" \\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), submitted && answers[index] === option && option !== question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \" x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), mark !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mark: \", mark, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswersCount, \"/\", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTestPage, \"XleeGG3R3Pxp8BIAKSsdS1Ongvo=\", false, function () {\n  return [useParams, useLocation, useUserRoleAccess];\n});\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useUserRoleAccess","jsxDEV","_jsxDEV","UserTestPage","_s","id","userId","setUserId","userEmail","setUserEmail","userRole","setUserRole","profession","setProfession","testQuestions","setTestQuestions","answers","setAnswers","mark","setMark","correctAnswersCount","setCorrectAnswersCount","submitted","setSubmitted","loading","setLoading","error","setError","location","email","userIdFromLocation","role","state","checkUserRoleAccess","length","Promise","all","fetch","then","response","json","professionData","testQuestionsData","catch","handleAnswerChange","questionIndex","selectedAnswer","handleSubmit","event","preventDefault","correctAnswers","forEach","question","index","correct_answer","calculatedMark","Math","round","testData","prof_test_id","user_id","correct_answers_amount","incorrect_answers_amount","comment_on_results","method","headers","body","JSON","stringify","data","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","profession_name","profession_description","onSubmit","map","level_of_question","Object","values","slice","option","optionIndex","style","color","type","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["// UserTestPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router\";\r\n\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\n\r\nexport default function UserTestPage() {\r\n  const { id } = useParams();\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [profession, setProfession] = useState(null);\r\n  const [testQuestions, setTestQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [mark, setMark] = useState(null);\r\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n  const [error, setError] = useState(null); // Track error state\r\n  const location = useLocation();\r\n  const { email, id: userIdFromLocation, role } = location.state || {};\r\n  const checkUserRoleAccess = useUserRoleAccess(0);\r\n\r\n  useEffect(() => {\r\n    if (!checkUserRoleAccess()) {\r\n      return;\r\n    }\r\n\r\n    setUserId(userIdFromLocation);\r\n    setUserEmail(email);\r\n    setUserRole(role);\r\n\r\n    // Fetch data if it hasn't been fetched already\r\n    if (!profession || testQuestions.length === 0) {\r\n      Promise.all([\r\n        fetch(`http://localhost:5000/get_prof/${id}`).then((response) => response.json()),\r\n        fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then((response) => response.json())\r\n      ]).then(([professionData, testQuestionsData]) => {\r\n        setProfession(professionData.profession);\r\n        setTestQuestions(testQuestionsData);\r\n        setLoading(false);\r\n      }).catch((error) => {\r\n        setError(\"Error fetching data. Please try again later.\");\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [id, userIdFromLocation, email, role, checkUserRoleAccess, profession, testQuestions]);\r\n\r\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionIndex]: selectedAnswer\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let correctAnswers = 0;\r\n\r\n    testQuestions.forEach((question, index) => {\r\n      if (answers[index] === question.correct_answer) {\r\n        correctAnswers++;\r\n      }\r\n    });\r\n\r\n    const calculatedMark = Math.round((correctAnswers / testQuestions.length) * 100);\r\n\r\n    const testData = {\r\n      prof_test_id: id,\r\n      user_id: userId,\r\n      mark: calculatedMark,\r\n      correct_answers_amount: correctAnswers,\r\n      incorrect_answers_amount: testQuestions.length - correctAnswers,\r\n      comment_on_results: \"Any comment you want to add\"\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/save_test_results\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(testData)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data.message);\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error saving test results:\", error);\r\n    });\r\n\r\n    setMark(calculatedMark);\r\n    setCorrectAnswersCount(correctAnswers);\r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to this User, {userEmail}</h1>\r\n      <p>User ID: {userId}</p>\r\n      <p>User Role: {userRole}</p>\r\n      {profession && (\r\n        <div>\r\n          <h2>Profession Details</h2>\r\n          <p>Profession Name: {profession.profession_name}</p>\r\n          <p>Description: {profession.profession_description}</p>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Test Questions</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {testQuestions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{index + 1}. {question.question} Level: {question.level_of_question}</p>\r\n            <ul>\r\n              {Object.values(question).slice(0, 4).map((option, optionIndex) => (\r\n                <li key={optionIndex}>\r\n                  <label style={{ color: submitted && option === question.correct_answer ? 'green' : (submitted && answers[index] !== option ? 'red' : 'inherit') }}>\r\n                    <input \r\n                      type=\"radio\" \r\n                      name={`question${index}`} \r\n                      value={option} \r\n                      checked={answers[index] === option} \r\n                      onChange={() => handleAnswerChange(index, option)} \r\n                      disabled={submitted} // Disable input after submission\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                  {submitted && answers[index] !== option && option === question.correct_answer && (\r\n                    <span style={{ color: 'green' }}> ✓</span>\r\n                  )}\r\n                  {submitted && answers[index] === option && option !== question.correct_answer && (\r\n                    <span style={{ color: 'red' }}> x</span>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" disabled={submitted}>Submit</button>\r\n      </form>\r\n\r\n      {mark !== null && (\r\n        <div>\r\n          <h2>Test Result</h2>\r\n          <p>Mark: {mark}%</p>\r\n          <p>Correct Answers: {correctAnswersCount}/{testQuestions.length}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}