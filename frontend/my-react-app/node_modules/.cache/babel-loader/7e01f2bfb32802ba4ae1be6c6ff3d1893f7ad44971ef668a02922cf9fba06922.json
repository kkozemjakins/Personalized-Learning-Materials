{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router\";\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [userId, setUserId] = useState(\"\"); // State to store user ID\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\n  const [userRole, setUserRole] = useState(\"\"); // State to store user role\n  const [profession, setProfession] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [mark, setMark] = useState(null);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\n  const location = useLocation();\n  const {\n    email,\n    id: userIdFromLocation,\n    role\n  } = location.state || {}; // Extract user data from location state\n  const checkUserRoleAccess = useUserRoleAccess(0);\n  useEffect(() => {\n    // Check user role access\n    if (!checkUserRoleAccess()) {\n      return;\n    }\n\n    // Set userId and userEmail\n    setUserId(userIdFromLocation);\n    setUserEmail(email);\n    setUserRole(role);\n\n    // Fetch profession details and test questions only if they are not already fetched\n    if (!profession) {\n      fetch(`http://localhost:5000/get_prof/${id}`).then(response => response.json()).then(data => {\n        setProfession(data.profession);\n      }).catch(error => console.error(\"Error fetching profession details:\", error));\n    }\n    if (testQuestions.length === 0) {\n      fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json()).then(data => {\n        setTestQuestions(data);\n      }).catch(error => console.error(\"Error fetching test questions:\", error));\n    }\n  }, [id, userIdFromLocation, email, role, checkUserRoleAccess, profession, testQuestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to this User, \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", userRole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), profession && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profession Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession Name: \", profession.profession_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", profession.profession_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [index + 1, \". \", question.question, \" Level: \", question.level_of_question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(question).slice(0, 4).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: submitted && option === question.correct_answer ? 'green' : submitted && answers[index] !== option ? 'red' : 'inherit'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question${index}`,\n                value: option,\n                checked: answers[index] === option,\n                onChange: () => handleAnswerChange(index, option),\n                disabled: submitted // Disable input after submission\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), submitted && answers[index] !== option && option === question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'green'\n              },\n              children: \" \\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), submitted && answers[index] === option && option !== question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \" x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), mark !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mark: \", mark, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswersCount, \"/\", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTestPage, \"Am/SbtK9UuljawdpqT3RIF+zbdM=\", false, function () {\n  return [useParams, useLocation, useUserRoleAccess];\n});\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useUserRoleAccess","jsxDEV","_jsxDEV","UserTestPage","_s","id","userId","setUserId","userEmail","setUserEmail","userRole","setUserRole","profession","setProfession","testQuestions","setTestQuestions","answers","setAnswers","mark","setMark","correctAnswersCount","setCorrectAnswersCount","submitted","setSubmitted","location","email","userIdFromLocation","role","state","checkUserRoleAccess","fetch","then","response","json","data","catch","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","profession_name","profession_description","onSubmit","handleSubmit","map","question","index","level_of_question","Object","values","slice","option","optionIndex","style","color","correct_answer","type","name","value","checked","onChange","handleAnswerChange","disabled","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["// UserTestPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router\";\r\n\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\n\r\nexport default function UserTestPage() {\r\n  const { id } = useParams();\r\n  const [userId, setUserId] = useState(\"\"); // State to store user ID\r\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\r\n  const [userRole, setUserRole] = useState(\"\"); // State to store user role\r\n  const [profession, setProfession] = useState(null);\r\n  const [testQuestions, setTestQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [mark, setMark] = useState(null);\r\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\r\n  const location = useLocation();\r\n  const { email, id: userIdFromLocation, role } = location.state || {}; // Extract user data from location state\r\n  const checkUserRoleAccess = useUserRoleAccess(0);\r\n\r\n  useEffect(() => {\r\n    // Check user role access\r\n    if (!checkUserRoleAccess()) {\r\n      return;\r\n    }\r\n  \r\n    // Set userId and userEmail\r\n    setUserId(userIdFromLocation);\r\n    setUserEmail(email);\r\n    setUserRole(role);\r\n  \r\n    // Fetch profession details and test questions only if they are not already fetched\r\n    if (!profession) {\r\n      fetch(`http://localhost:5000/get_prof/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setProfession(data.profession);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching profession details:\", error));\r\n    }\r\n  \r\n    if (testQuestions.length === 0) {\r\n      fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setTestQuestions(data);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching test questions:\", error));\r\n    }\r\n  }, [id, userIdFromLocation, email, role, checkUserRoleAccess, profession, testQuestions]);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to this User, {userEmail}</h1>\r\n      <p>User ID: {userId}</p>\r\n      <p>User Role: {userRole}</p>\r\n      {profession && (\r\n        <div>\r\n          <h2>Profession Details</h2>\r\n          <p>Profession Name: {profession.profession_name}</p>\r\n          <p>Description: {profession.profession_description}</p>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Test Questions</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {testQuestions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{index + 1}. {question.question} Level: {question.level_of_question}</p>\r\n            <ul>\r\n              {Object.values(question).slice(0, 4).map((option, optionIndex) => (\r\n                <li key={optionIndex}>\r\n                  <label style={{ color: submitted && option === question.correct_answer ? 'green' : (submitted && answers[index] !== option ? 'red' : 'inherit') }}>\r\n                    <input \r\n                      type=\"radio\" \r\n                      name={`question${index}`} \r\n                      value={option} \r\n                      checked={answers[index] === option} \r\n                      onChange={() => handleAnswerChange(index, option)} \r\n                      disabled={submitted} // Disable input after submission\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                  {submitted && answers[index] !== option && option === question.correct_answer && (\r\n                    <span style={{ color: 'green' }}> ✓</span>\r\n                  )}\r\n                  {submitted && answers[index] === option && option !== question.correct_answer && (\r\n                    <span style={{ color: 'red' }}> x</span>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" disabled={submitted}>Submit</button>\r\n      </form>\r\n\r\n      {mark !== null && (\r\n        <div>\r\n          <h2>Test Result</h2>\r\n          <p>Mark: {mark}%</p>\r\n          <p>Correct Answers: {correctAnswersCount}/{testQuestions.length}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}