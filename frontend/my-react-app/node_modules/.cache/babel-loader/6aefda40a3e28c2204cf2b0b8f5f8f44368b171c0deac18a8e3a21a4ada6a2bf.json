{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\Functions\\\\apiUtils.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// apiUtils.js\n\nexport const fetchData = async (url, setData, dataKey) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (Array.isArray(data[dataKey])) {\n      setData(data[dataKey]);\n    }\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n  }\n};\nexport const renderListItems = (items, renderFunction) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: Array.isArray(items) ? items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: renderFunction(item)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this)) : null\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\nexport const renderListItemsWithAction = (items, renderFunction, handleDelete, handleModify) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: Array.isArray(items) ? items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: renderFunction(item, handleDelete, handleModify)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this)) : null\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\nexport const updateUserData = async (userId, updatedUserData) => {\n  try {\n    const bodyData = {};\n\n    // Iterate through the fields in updatedUserData and include them in bodyData\n    Object.keys(updatedUserData).forEach(field => {\n      // Exclude 'id' field from the update, assuming 'id' is not meant to be updated\n      if (field !== 'id' && updatedUserData[field] !== undefined) {\n        bodyData[field] = updatedUserData[field];\n      }\n    });\n    const response = await fetch(`http://localhost:5000/update_user/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bodyData)\n    });\n    if (response.ok) {\n      return true; // Successful update\n    } else {\n      console.error('Error updating user:', response.statusText);\n      return false;\n    }\n  } catch (error) {\n    console.error('Error updating user:', error);\n    return false;\n  }\n};\nexport const UpdateForm = ({\n  formData,\n  fields,\n  onChange,\n  onSubmit\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: onSubmit,\n  children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [field.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: field.type || 'text',\n      name: field.name,\n      value: formData[field.name] || '',\n      onChange: e => onChange({\n        ...formData,\n        [field.name]: e.target.value\n      }),\n      required: field.required || false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, field.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    children: \"Update\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n_c = UpdateForm;\nexport default UpdateForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["fetchData","url","setData","dataKey","response","fetch","data","json","Array","isArray","error","console","renderListItems","items","renderFunction","_jsxDEV","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","renderListItemsWithAction","handleDelete","handleModify","updateUserData","userId","updatedUserData","bodyData","Object","keys","forEach","field","undefined","method","headers","body","JSON","stringify","ok","statusText","UpdateForm","formData","fields","onChange","onSubmit","label","type","name","value","e","target","required","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/Functions/apiUtils.jsx"],"sourcesContent":["// apiUtils.js\r\n\r\nexport const fetchData = async (url, setData, dataKey) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (Array.isArray(data[dataKey])) {\r\n      setData(data[dataKey]);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching data from ${url}:`, error);\r\n  }\r\n};\r\n\r\nexport const renderListItems = (items, renderFunction) => (\r\n  <ul>\r\n    {Array.isArray(items) ? items.map((item) => (\r\n      <li key={item.id}>{renderFunction(item)}</li>\r\n    )) : null}\r\n  </ul>\r\n);\r\n\r\nexport const renderListItemsWithAction = (items, renderFunction, handleDelete, handleModify) => (\r\n  <ul>\r\n    {Array.isArray(items) ? items.map((item) => (\r\n      <li key={item.id}>\r\n        {renderFunction(item, handleDelete, handleModify)}\r\n      </li>\r\n    )) : null}\r\n  </ul>\r\n);\r\n\r\nexport const updateUserData = async (userId, updatedUserData) => {\r\n  try {\r\n    const bodyData = {};\r\n\r\n    // Iterate through the fields in updatedUserData and include them in bodyData\r\n    Object.keys(updatedUserData).forEach((field) => {\r\n      // Exclude 'id' field from the update, assuming 'id' is not meant to be updated\r\n      if (field !== 'id' && updatedUserData[field] !== undefined) {\r\n        bodyData[field] = updatedUserData[field];\r\n      }\r\n    });\r\n\r\n    const response = await fetch(`http://localhost:5000/update_user/${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(bodyData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      return true; // Successful update\r\n    } else {\r\n      console.error('Error updating user:', response.statusText);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating user:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\nexport const UpdateForm = ({ formData, fields, onChange, onSubmit }) => (\r\n  <form onSubmit={onSubmit}>\r\n    {fields.map((field) => (\r\n      <div key={field.name}>\r\n        <label>{field.label}:</label>\r\n        <input\r\n          type={field.type || 'text'}\r\n          name={field.name}\r\n          value={formData[field.name] || ''}\r\n          onChange={(e) => onChange({ ...formData, [field.name]: e.target.value })}\r\n          required={field.required || false}\r\n        />\r\n      </div>\r\n    ))}\r\n    <button type=\"submit\">Update</button>\r\n  </form>\r\n);\r\n\r\n\r\nexport default UpdateForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}