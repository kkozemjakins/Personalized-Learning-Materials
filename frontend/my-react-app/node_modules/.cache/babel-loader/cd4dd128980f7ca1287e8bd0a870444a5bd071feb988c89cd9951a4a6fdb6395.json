{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [profession, setProfession] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  useEffect(() => {\n    console.log(\"Fetching profession details for ID:\", id);\n    fetch(`http://localhost:5000/get_prof/${id}`).then(response => response.json()).then(data => {\n      console.log(\"Profession details fetched:\", data);\n      setProfession(data.profession);\n    }).catch(error => console.error(\"Error fetching profession details:\", error));\n    console.log(\"Fetching test questions for profession ID:\", id);\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json()).then(data => {\n      console.log(\"Test questions fetched:\", data);\n      setTestQuestions(data.testQuestions || []); // Ensure setting an empty array if testQuestions is undefined\n    }).catch(error => console.error(\"Error fetching test questions:\", error));\n  }, [id]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    // You can implement submission logic here, e.g., checking answers\n    console.log(\"Form submitted!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profession Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), profession && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession ID: \", profession.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession Name: \", profession.profession_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", profession.profession_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [index + 1, \". \", question.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question${index}`,\n              value: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(UserTestPage, \"xYJTdCvMwJb16qbjSwmut5P9l+Y=\", true);\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["UserTestPage","_s","id","useParams","profession","setProfession","useState","testQuestions","setTestQuestions","useEffect","console","log","fetch","then","response","json","data","catch","error","handleSubmit","event","preventDefault","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","profession_name","profession_description","map","question","index","text","options","option","optionIndex","type","name","value","onClick","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["export default function UserTestPage() {\r\n    const { id } = useParams();\r\n    const [profession, setProfession] = useState(null);\r\n    const [testQuestions, setTestQuestions] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      console.log(\"Fetching profession details for ID:\", id);\r\n      fetch(`http://localhost:5000/get_prof/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Profession details fetched:\", data);\r\n          setProfession(data.profession);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching profession details:\", error));\r\n  \r\n      console.log(\"Fetching test questions for profession ID:\", id);\r\n      fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Test questions fetched:\", data);\r\n          setTestQuestions(data.testQuestions || []); // Ensure setting an empty array if testQuestions is undefined\r\n        })\r\n        .catch((error) => console.error(\"Error fetching test questions:\", error));\r\n    }, [id]);\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      // You can implement submission logic here, e.g., checking answers\r\n      console.log(\"Form submitted!\");\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Profession Details</h2>\r\n        {profession && (\r\n          <div>\r\n            <p>Profession ID: {profession.id}</p>\r\n            <p>Profession Name: {profession.profession_name}</p>\r\n            <p>Description: {profession.profession_description}</p>\r\n          </div>\r\n        )}\r\n  \r\n        <h2>Test Questions</h2>\r\n        {testQuestions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{index + 1}. {question.text}</p>\r\n            <ul>\r\n              {question.options.map((option, optionIndex) => (\r\n                <li key={optionIndex}>\r\n                  <label>\r\n                    <input type=\"radio\" name={`question${index}`} value={option} />\r\n                    {option}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n  \r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}