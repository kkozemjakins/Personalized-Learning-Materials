{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestResultsPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestResultsPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { getUserInfo } from \"../Functions/authUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestResultsPage() {\n  _s();\n  const {\n    userId\n  } = getUserInfo();\n  const [userAnswers, setUserAnswers] = useState([]);\n  useEffect(() => {\n    // Fetch user answers when the component mounts\n    fetch(`http://localhost:5000/user_answers/${userId}`).then(response => response.json()).then(data => {\n      if (data.userAnswers) {\n        setUserAnswers(data.userAnswers);\n      }\n    }).catch(error => console.error(\"Error fetching user answers:\", error));\n  }, [userId]); // Fetch user answers whenever userId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Test Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), userAnswers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(userAnswers).map(([professionId, answers]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Profession ID: \", professionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question: \", answer.question_text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", answer.user_answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct/Incorrect: \", answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this)]\n        }, answer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this))]\n      }, professionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No test results found for the user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(UserTestResultsPage, \"hPIrB7wXeUDFe9VpqIAb66b+M0Q=\");\n_c = UserTestResultsPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","getUserInfo","jsxDEV","_jsxDEV","UserTestResultsPage","_s","userId","userAnswers","setUserAnswers","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","entries","map","professionId","answers","answer","question_text","user_answer","correct_incorrect","id","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestResultsPage.jsx"],"sourcesContent":["// UserTestResultsPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getUserInfo } from \"../Functions/authUtils\";\r\n\r\nexport default function UserTestResultsPage() {\r\n    const { userId } = getUserInfo();\r\n    const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch user answers when the component mounts\r\n        fetch(`http://localhost:5000/user_answers/${userId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.userAnswers) {\r\n                    setUserAnswers(data.userAnswers);\r\n                }\r\n            })\r\n            .catch((error) => console.error(\"Error fetching user answers:\", error));\r\n    }, [userId]); // Fetch user answers whenever userId changes\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your Test Results</h1>\r\n            {userAnswers.length > 0 ? (\r\n                <div>\r\n                    {Object.entries(userAnswers).map(([professionId, answers]) => (\r\n                        <div key={professionId}>\r\n                            <h2>Profession ID: {professionId}</h2>\r\n                            {answers.map((answer) => (\r\n                                <div key={answer.id}>\r\n                                    <p>Question: {answer.question_text}</p>\r\n                                    <p>Your Answer: {answer.user_answer}</p>\r\n                                    <p>Correct/Incorrect: {answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>No test results found for the user.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAO,CAAC,GAAGL,WAAW,CAAC,CAAC;EAChC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ;IACAS,KAAK,CAAE,sCAAqCH,MAAO,EAAC,CAAC,CAChDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACN,WAAW,EAAE;QAClBC,cAAc,CAACK,IAAI,CAACN,WAAW,CAAC;MACpC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC/E,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACIH,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBd,WAAW,CAACe,MAAM,GAAG,CAAC,gBACnBnB,OAAA;MAAAc,QAAA,EACKM,MAAM,CAACC,OAAO,CAACjB,WAAW,CAAC,CAACkB,GAAG,CAAC,CAAC,CAACC,YAAY,EAAEC,OAAO,CAAC,kBACrDxB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,GAAI,iBAAe,EAACS,YAAY;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrCM,OAAO,CAACF,GAAG,CAAEG,MAAM,iBAChBzB,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAAc,QAAA,GAAG,YAAU,EAACW,MAAM,CAACC,aAAa;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvClB,OAAA;YAAAc,QAAA,GAAG,eAAa,EAACW,MAAM,CAACE,WAAW;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxClB,OAAA;YAAAc,QAAA,GAAG,qBAAmB,EAACW,MAAM,CAACG,iBAAiB,KAAK,CAAC,GAAG,SAAS,GAAG,WAAW;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAH9EO,MAAM,CAACI,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACR,CAAC;MAAA,GARIK,YAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENlB,OAAA;MAAAc,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChB,EAAA,CAvCuBD,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}