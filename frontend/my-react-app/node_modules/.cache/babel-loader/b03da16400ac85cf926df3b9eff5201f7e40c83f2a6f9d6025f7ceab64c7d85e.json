{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestResultsPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestResultsPage.jsx\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\n\n// Arrow icons for indicating collapse/expand state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrowDown = \"\\u25BC\";\nconst arrowUp = \"\\u25B2\";\nexport default function UserTestResultsPage() {\n  _s();\n  const checkUserRoleAccess = useUserRoleAccess(0);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [userAnswers, setUserAnswers] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [collapsedTests, setCollapsedTests] = useState({});\n\n  // Define a ref to track previous userId\n  const previousUserId = useRef(null);\n  useEffect(() => {\n    // Fetch user information from session storage or state\n    const userEmailFromStorage = sessionStorage.getItem(\"user_email\");\n    const userIdFromStorage = sessionStorage.getItem(\"user_id\");\n    const userRoleFromStorage = sessionStorage.getItem(\"user_role\");\n    setUserEmail(userEmailFromStorage);\n    setUserId(userIdFromStorage);\n    setUserRole(userRoleFromStorage);\n    if (!checkUserRoleAccess() || !userId) {\n      setLoading(false);\n      return;\n    }\n\n    // Fetch user answers from the backend API only if userId has changed\n    if (userId !== previousUserId.current) {\n      setLoading(true);\n      fetch(`http://localhost:5000/user_answers/${userId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user answers\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"User answers data:\", data); // Log user answers data\n        setUserAnswers(Array.isArray(data.userAnswers) ? data.userAnswers : []); // Ensure userAnswers is always an array\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n      previousUserId.current = userId; // Update previousUserId ref\n    }\n  }, [userId, checkUserRoleAccess]);\n  useEffect(() => {\n    // Check if userAnswers is an array before trying to iterate over it\n    if (!Array.isArray(userAnswers)) {\n      console.error(\"userAnswers is not an array:\", userAnswers);\n      return;\n    }\n\n    // Set all tests to be collapsed by default\n    const initialCollapsedState = {};\n    userAnswers.forEach(mark_info => {\n      initialCollapsedState[mark_info.prof_test_results_marks_id] = true;\n    });\n    setCollapsedTests(initialCollapsedState);\n  }, [userAnswers]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Group user answers by prof_test_id\n  const groupedUserAnswers = {};\n  userAnswers.forEach(mark_info => {\n    if (!groupedUserAnswers[mark_info.prof_test_results_marks_id]) {\n      groupedUserAnswers[mark_info.prof_test_results_marks_id] = [];\n    }\n    groupedUserAnswers[mark_info.prof_test_results_marks_id].push(mark_info);\n  });\n\n  // Toggle collapse state for a test\n  const toggleCollapse = testId => {\n    setCollapsedTests(prevState => ({\n      ...prevState,\n      [testId]: !prevState[testId]\n    }));\n  };\n\n  // Function to delete all marks and answers\n  const deleteAllMarksAndAnswers = () => {\n    fetch(`http://localhost:5000/delete_all_test_results`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      // Handle success\n      console.log(data.message);\n      // Update userAnswers state to clear the data\n      setUserAnswers([]);\n    }).catch(error => {\n      // Handle error\n      console.error(\"Error deleting marks and answers:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to this User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User Email: \", userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User Role: \", userRole]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/logout\",\n              className: \"btn btn-success\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), \"| \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user_main\",\n              className: \"btn btn-success\",\n              children: \"Main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: deleteAllMarksAndAnswers,\n            children: \"Delete All Marks and Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), Object.entries(groupedUserAnswers).map(([testId, answers]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              onClick: () => toggleCollapse(testId),\n              children: [collapsedTests[testId] ? arrowDown : arrowUp, \"\\xA0Test ID: \", testId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), !collapsedTests[testId] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"id of result:\", answer.prof_test_results_marks_id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      children: [answer.question_text, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 67\n                    }, this), \" Level: \", answer.question_level]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"User Answer: \", answer.user_answer]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: answer.correct_incorrect === 1 ? \"green\" : \"red\"\n                      },\n                      children: [\"Correct/Incorrect: \", answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 53\n                  }, this), index === answers.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Comment on Result:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 61\n                    }, this), \" \", answer.comment_on_result]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 49\n                }, this)\n              }, answer.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this)]\n          }, testId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(UserTestResultsPage, \"zCqVrGplUXutSuK1uOd73KIwGT0=\", false, function () {\n  return [useUserRoleAccess];\n});\n_c = UserTestResultsPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestResultsPage\");","map":{"version":3,"names":["useUserRoleAccess","jsxDEV","_jsxDEV","arrowDown","arrowUp","UserTestResultsPage","_s","checkUserRoleAccess","userEmail","setUserEmail","useState","userId","setUserId","userRole","setUserRole","userAnswers","setUserAnswers","loading","setLoading","error","setError","collapsedTests","setCollapsedTests","previousUserId","useRef","useEffect","userEmailFromStorage","sessionStorage","getItem","userIdFromStorage","userRoleFromStorage","current","fetch","then","response","ok","Error","json","data","console","log","Array","isArray","catch","initialCollapsedState","forEach","mark_info","prof_test_results_marks_id","children","fileName","_jsxFileName","lineNumber","columnNumber","message","groupedUserAnswers","push","toggleCollapse","testId","prevState","deleteAllMarksAndAnswers","method","className","Link","to","onClick","Object","entries","map","answers","answer","index","question_text","question_level","user_answer","style","color","correct_incorrect","length","comment_on_result","id","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestResultsPage.jsx"],"sourcesContent":["// UserTestResultsPage.jsx\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\n\r\n// Arrow icons for indicating collapse/expand state\r\nconst arrowDown = \"\\u25BC\";\r\nconst arrowUp = \"\\u25B2\";\r\n\r\nexport default function UserTestResultsPage() {\r\n    const checkUserRoleAccess = useUserRoleAccess(0);\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [userRole, setUserRole] = useState(\"\");\r\n    const [userAnswers, setUserAnswers] = useState([]); // Initialize as an empty array\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [collapsedTests, setCollapsedTests] = useState({});\r\n    \r\n    // Define a ref to track previous userId\r\n    const previousUserId = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch user information from session storage or state\r\n        const userEmailFromStorage = sessionStorage.getItem(\"user_email\");\r\n        const userIdFromStorage = sessionStorage.getItem(\"user_id\");\r\n        const userRoleFromStorage = sessionStorage.getItem(\"user_role\");\r\n\r\n        setUserEmail(userEmailFromStorage);\r\n        setUserId(userIdFromStorage);\r\n        setUserRole(userRoleFromStorage);\r\n\r\n        if (!checkUserRoleAccess() || !userId) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        // Fetch user answers from the backend API only if userId has changed\r\n        if (userId !== previousUserId.current) {\r\n            setLoading(true);\r\n            fetch(`http://localhost:5000/user_answers/${userId}`)\r\n                .then((response) => {\r\n                    if (!response.ok) {\r\n                        throw new Error(\"Failed to fetch user answers\");\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"User answers data:\", data); // Log user answers data\r\n                    setUserAnswers(Array.isArray(data.userAnswers) ? data.userAnswers : []); // Ensure userAnswers is always an array\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    setError(error);\r\n                    setLoading(false);\r\n                });\r\n            previousUserId.current = userId; // Update previousUserId ref\r\n        }\r\n    }, [userId, checkUserRoleAccess]);\r\n\r\n    useEffect(() => {\r\n        // Check if userAnswers is an array before trying to iterate over it\r\n        if (!Array.isArray(userAnswers)) {\r\n            console.error(\"userAnswers is not an array:\", userAnswers);\r\n            return;\r\n        }\r\n\r\n        // Set all tests to be collapsed by default\r\n        const initialCollapsedState = {};\r\n        userAnswers.forEach(mark_info => {\r\n            initialCollapsedState[mark_info.prof_test_results_marks_id] = true;\r\n        });\r\n        setCollapsedTests(initialCollapsedState);\r\n    }, [userAnswers]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    }\r\n\r\n    // Group user answers by prof_test_id\r\n    const groupedUserAnswers = {};\r\n    userAnswers.forEach((mark_info) => {\r\n        if (!groupedUserAnswers[mark_info.prof_test_results_marks_id]) {\r\n            groupedUserAnswers[mark_info.prof_test_results_marks_id] = [];\r\n        }\r\n        groupedUserAnswers[mark_info.prof_test_results_marks_id].push(mark_info);\r\n    });\r\n\r\n    // Toggle collapse state for a test\r\n    const toggleCollapse = (testId) => {\r\n        setCollapsedTests((prevState) => ({\r\n            ...prevState,\r\n            [testId]: !prevState[testId],\r\n        }));\r\n    };\r\n\r\n    // Function to delete all marks and answers\r\n    const deleteAllMarksAndAnswers = () => {\r\n        fetch(`http://localhost:5000/delete_all_test_results`, {\r\n            method: \"DELETE\",\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Handle success\r\n            console.log(data.message);\r\n            // Update userAnswers state to clear the data\r\n            setUserAnswers([]);\r\n        })\r\n        .catch(error => {\r\n            // Handle error\r\n            console.error(\"Error deleting marks and answers:\", error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12\">\r\n                        <h1>Welcome to this User</h1>\r\n                        <p>User Email: {userEmail}</p>\r\n                        <p>User ID: {userId}</p>\r\n                        <p>User Role: {userRole}</p>\r\n\r\n                        <p>\r\n                            <Link to=\"/logout\" className=\"btn btn-success\">Logout</Link> \r\n                            | <Link to=\"/user_main\" className=\"btn btn-success\">Main</Link> \r\n                        </p>\r\n\r\n                        {/* Button to delete all marks and answers */}\r\n                        <button className=\"btn btn-danger\" onClick={deleteAllMarksAndAnswers}>\r\n                            Delete All Marks and Answers\r\n                        </button>\r\n\r\n                        {/* Display user answers grouped by prof_test_id */}\r\n                        {Object.entries(groupedUserAnswers).map(([testId, answers]) => (\r\n                            <div key={testId}>\r\n                                <h2 onClick={() => toggleCollapse(testId)}>\r\n                                    {collapsedTests[testId] ? arrowDown : arrowUp}\r\n                                    &nbsp;Test ID: {testId}\r\n                                </h2>\r\n                                {!collapsedTests[testId] && (\r\n                                    <ul>\r\n                                        {answers.map((answer, index) => (\r\n                                            <li key={answer.id}>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        id of result:{answer.prof_test_results_marks_id}\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Question: <i>{answer.question_text} </i> Level: {answer.question_level}\r\n                                                    </li>\r\n                                                    <li>User Answer: {answer.user_answer}</li>\r\n                                                    <li>\r\n                                                        <span style={{ color: answer.correct_incorrect === 1 ? \"green\" : \"red\" }}>\r\n                                                            Correct/Incorrect: {answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"}\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    {index === answers.length - 1 && (\r\n                                                        <div>\r\n                                                            <p>Comment on Result:</p> {answer.comment_on_result}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </ul>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}