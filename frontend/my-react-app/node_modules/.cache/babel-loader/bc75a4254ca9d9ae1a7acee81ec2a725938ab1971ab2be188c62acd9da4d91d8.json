{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserCoursePage.jsx\",\n  _s = $RefreshSig$();\n//UserCoursePage.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport XmlViewer from 'react-xml-viewer'; // Change import to default\nimport { Collapse } from 'reactstrap'; // Import Collapse from Reactstrap or any other UI library you're using\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = ({\n  resultId\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState('');\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    const userIdFromStorage = sessionStorage.getItem(\"user_id\");\n    setUserId(userIdFromStorage);\n    const fetchRecommendations = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/get_user_xml/${userIdFromStorage}`);\n        setRecommendations(response.data.user_xmls);\n      } catch (error) {\n        console.error('Error fetching XML file:', error);\n      }\n    };\n    fetchRecommendations();\n  }, [resultId]);\n\n  // Function to render recommendations for each topic\n  const renderRecommendations = () => {\n    if (!recommendations) return null;\n\n    // Parse XML to JSON\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(recommendations, \"text/xml\");\n\n    // Extract topics from XML\n    const topics = xmlDoc.getElementsByTagName(\"topic\");\n\n    // Iterate over topics and render collapse items\n    return Array.from(topics).map((topic, index) => {\n      const title = topic.querySelector(\"title\").textContent;\n      const description = topic.querySelector(\"description\").textContent;\n      const recommendationElements = topic.querySelectorAll(\"recommendation\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Array.from(recommendationElements).map((recommendation, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: recommendation.textContent\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      isOpen: true,\n      children: renderRecommendations()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"5mL1HjzwpMirHd1Wbn1viWwvbBc=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useEffect","useState","axios","XmlViewer","Collapse","jsxDEV","_jsxDEV","Recommendations","resultId","_s","recommendations","setRecommendations","userId","setUserId","userIdFromStorage","sessionStorage","getItem","fetchRecommendations","response","get","data","user_xmls","error","console","renderRecommendations","parser","DOMParser","xmlDoc","parseFromString","topics","getElementsByTagName","Array","from","map","topic","index","title","querySelector","textContent","description","recommendationElements","querySelectorAll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","recommendation","idx","isOpen","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserCoursePage.jsx"],"sourcesContent":["//UserCoursePage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport XmlViewer from 'react-xml-viewer'; // Change import to default\r\nimport { Collapse } from 'reactstrap'; // Import Collapse from Reactstrap or any other UI library you're using\r\n\r\nconst Recommendations = ({ resultId }) => {\r\n  const [recommendations, setRecommendations] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userIdFromStorage = sessionStorage.getItem(\"user_id\");\r\n    setUserId(userIdFromStorage);\r\n\r\n    const fetchRecommendations = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/get_user_xml/${userIdFromStorage}`);\r\n        setRecommendations(response.data.user_xmls);\r\n      } catch (error) {\r\n        console.error('Error fetching XML file:', error);\r\n      }\r\n    };\r\n    fetchRecommendations();\r\n  }, [resultId]);\r\n\r\n  // Function to render recommendations for each topic\r\n  const renderRecommendations = () => {\r\n    if (!recommendations) return null;\r\n\r\n    // Parse XML to JSON\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(recommendations, \"text/xml\");\r\n\r\n    // Extract topics from XML\r\n    const topics = xmlDoc.getElementsByTagName(\"topic\");\r\n\r\n    // Iterate over topics and render collapse items\r\n    return Array.from(topics).map((topic, index) => {\r\n      const title = topic.querySelector(\"title\").textContent;\r\n      const description = topic.querySelector(\"description\").textContent;\r\n      const recommendationElements = topic.querySelectorAll(\"recommendation\");\r\n\r\n      return (\r\n        <div key={index}>\r\n          <h5 className=\"mb-3\">{title}</h5>\r\n          <p>{description}</p>\r\n          <ul>\r\n            {Array.from(recommendationElements).map((recommendation, idx) => (\r\n              <li key={idx}>{recommendation.textContent}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Collapse isOpen={true}>{renderRecommendations()}</Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}