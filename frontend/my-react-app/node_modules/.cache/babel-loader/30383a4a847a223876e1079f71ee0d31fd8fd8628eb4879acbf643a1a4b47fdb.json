{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  requiredRole\n}) => {\n  // Assume you have a function to check if the user is logged in and has the required role\n  const isLoggedIn = true; // Replace with your logic to check if user is logged in\n\n  if (!isLoggedIn || userRole !== requiredRole) {\n    // If user is not logged in or doesn't have the required role, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If user is logged in and has the required role, render the component\n  return /*#__PURE__*/_jsxDEV(Route, {\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","requiredRole","isLoggedIn","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ element, requiredRole }) => {\r\n  // Assume you have a function to check if the user is logged in and has the required role\r\n  const isLoggedIn = true; // Replace with your logic to check if user is logged in\r\n\r\n\r\n  if (!isLoggedIn || userRole !== requiredRole) {\r\n    // If user is not logged in or doesn't have the required role, redirect to login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If user is logged in and has the required role, render the component\r\n  return <Route element={element} />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACpD;EACA,MAAMC,UAAU,GAAG,IAAI,CAAC,CAAC;;EAGzB,IAAI,CAACA,UAAU,IAAIC,QAAQ,KAAKF,YAAY,EAAE;IAC5C;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,oBAAOV,OAAA,CAACH,KAAK;IAACK,OAAO,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACC,EAAA,GAZIV,cAAc;AAcpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}