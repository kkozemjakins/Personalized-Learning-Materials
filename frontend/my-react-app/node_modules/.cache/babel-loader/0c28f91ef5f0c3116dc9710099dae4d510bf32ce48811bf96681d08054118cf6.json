{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\Admin\\\\AdminManageUsersPage.jsx\",\n  _s = $RefreshSig$();\n// AdminManageUsersPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchData, renderListItems, deleteItem, updateItem } from \"../Functions/apiUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminManageUsersPage() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [userIdToDelete, setUserIdToDelete] = useState(null);\n  const [userToUpdate, setUserToUpdate] = useState(null);\n  useEffect(() => {\n    fetchData(\"http://localhost:5000/get_users\", setUsers, \"users\");\n  }, []);\n  const renderUserItem = user => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"(User email: \", user.email, \") (Role ID: \", user.role_id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUserIdToDelete(user.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUserToUpdate(user),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, user.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  const handleDelete = async () => {\n    if (userIdToDelete) {\n      await deleteItem(\"http://localhost:5000/delete_user\", userIdToDelete, deletedUserId => {\n        setUsers(users.filter(user => user.id !== deletedUserId));\n        setUserIdToDelete(null);\n      });\n    }\n  };\n  const handleUpdate = async () => {\n    if (userToUpdate) {\n      // Implement your logic to gather updated data\n      const updatedData = {}; // Modify as needed\n      await updateItem(\"http://localhost:5000/modify_user\", userToUpdate.id, updatedData, (updatedUserId, newData) => {\n        // Update the local state with the new data\n        setUsers(users.map(user => user.id === updatedUserId ? {\n          ...user,\n          ...newData\n        } : user));\n        setUserToUpdate(null);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to Users Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"btn btn-success\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), \" | \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"btn btn-success\",\n              children: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin_users\",\n              className: \"btn btn-success\",\n              children: \"Manage Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), \" | \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin_prof\",\n              className: \"btn btn-success\",\n              children: \"Manage professions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 89\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Users List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), renderListItems(users, renderUserItem), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            method: \"post\",\n            action: \"http://localhost:5000/add_user\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"role_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminManageUsersPage, \"loPo8y6jTXf+aAILqA3CffQTRpM=\");\n_c = AdminManageUsersPage;\nvar _c;\n$RefreshReg$(_c, \"AdminManageUsersPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchData","renderListItems","deleteItem","updateItem","jsxDEV","_jsxDEV","AdminManageUsersPage","_s","users","setUsers","userIdToDelete","setUserIdToDelete","userToUpdate","setUserToUpdate","renderUserItem","user","children","email","role_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","handleDelete","deletedUserId","filter","handleUpdate","updatedData","updatedUserId","newData","map","className","to","method","action","type","name","required","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/Admin/AdminManageUsersPage.jsx"],"sourcesContent":["// AdminManageUsersPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchData, renderListItems, deleteItem, updateItem } from \"../Functions/apiUtils\";\r\n\r\nexport default function AdminManageUsersPage() {\r\n  const [users, setUsers] = useState([]);\r\n  const [userIdToDelete, setUserIdToDelete] = useState(null);\r\n  const [userToUpdate, setUserToUpdate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"http://localhost:5000/get_users\", setUsers, \"users\");\r\n  }, []);\r\n\r\n  const renderUserItem = (user) => (\r\n    <div key={user.id}>\r\n      <p>(User email: {user.email}) (Role ID: {user.role_id})</p>\r\n      <button onClick={() => setUserIdToDelete(user.id)}>Delete</button>\r\n      <button onClick={() => setUserToUpdate(user)}>Update</button>\r\n    </div>\r\n  );\r\n\r\n  const handleDelete = async () => {\r\n    if (userIdToDelete) {\r\n      await deleteItem(\"http://localhost:5000/delete_user\", userIdToDelete, (deletedUserId) => {\r\n        setUsers(users.filter((user) => user.id !== deletedUserId));\r\n        setUserIdToDelete(null);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    if (userToUpdate) {\r\n      // Implement your logic to gather updated data\r\n      const updatedData = {}; // Modify as needed\r\n      await updateItem(\"http://localhost:5000/modify_user\", userToUpdate.id, updatedData, (updatedUserId, newData) => {\r\n        // Update the local state with the new data\r\n        setUsers(users.map((user) => (user.id === updatedUserId ? { ...user, ...newData } : user)));\r\n        setUserToUpdate(null);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-12\">\r\n            <h1>Welcome to Users Manage</h1>\r\n            <p>\r\n              <Link to=\"/login\" className=\"btn btn-success\">Login</Link> | <Link to=\"/register\" className=\"btn btn-success\">register</Link>\r\n            </p>\r\n            <p>\r\n              <Link to=\"/admin_users\" className=\"btn btn-success\">Manage Users</Link> | <Link to=\"/admin_prof\" className=\"btn btn-success\">Manage professions</Link>\r\n            </p>\r\n\r\n            {/* Display Users */}\r\n            <h2>Users List</h2>\r\n            {renderListItems(users, renderUserItem)}\r\n\r\n            {/* Add New User Form (example, modify as needed) */}\r\n            <h2>Add New User</h2>\r\n            <form method=\"post\" action=\"http://localhost:5000/add_user\">\r\n              <label>Email:</label>\r\n              <input type=\"text\" name=\"email\" required />\r\n              <label>Password:</label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <label>Role ID:</label>\r\n              <input type=\"number\" name=\"role_id\" />\r\n              <button type=\"submit\">Add User</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,eAAe,EAAEC,UAAU,EAAEC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdE,SAAS,CAAC,iCAAiC,EAAES,QAAQ,EAAE,OAAO,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAIC,IAAI,iBAC1BV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,GAAG,eAAa,EAACD,IAAI,CAACE,KAAK,EAAC,cAAY,EAACF,IAAI,CAACG,OAAO,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3DjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACI,IAAI,CAACS,EAAE,CAAE;MAAAR,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClEjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAACE,IAAI,CAAE;MAAAC,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAHrDP,IAAI,CAACS,EAAE;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CACN;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIf,cAAc,EAAE;MAClB,MAAMR,UAAU,CAAC,mCAAmC,EAAEQ,cAAc,EAAGgB,aAAa,IAAK;QACvFjB,QAAQ,CAACD,KAAK,CAACmB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACS,EAAE,KAAKE,aAAa,CAAC,CAAC;QAC3Df,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIhB,YAAY,EAAE;MAChB;MACA,MAAMiB,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;MACxB,MAAM1B,UAAU,CAAC,mCAAmC,EAAES,YAAY,CAACY,EAAE,EAAEK,WAAW,EAAE,CAACC,aAAa,EAAEC,OAAO,KAAK;QAC9G;QACAtB,QAAQ,CAACD,KAAK,CAACwB,GAAG,CAAEjB,IAAI,IAAMA,IAAI,CAACS,EAAE,KAAKM,aAAa,GAAG;UAAE,GAAGf,IAAI;UAAE,GAAGgB;QAAQ,CAAC,GAAGhB,IAAK,CAAC,CAAC;QAC3FF,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACER,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAjB,QAAA,eAC9BX,OAAA;QAAK4B,SAAS,EAAC,WAAW;QAAAjB,QAAA,eACxBX,OAAA;UAAK4B,SAAS,EAAC,QAAQ;UAAAjB,QAAA,gBACrBX,OAAA;YAAAW,QAAA,EAAI;UAAuB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChCjB,OAAA;YAAAW,QAAA,gBACEX,OAAA,CAACN,IAAI;cAACmC,EAAE,EAAC,QAAQ;cAACD,SAAS,EAAC,iBAAiB;cAAAjB,QAAA,EAAC;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,OAAG,eAAAjB,OAAA,CAACN,IAAI;cAACmC,EAAE,EAAC,WAAW;cAACD,SAAS,EAAC,iBAAiB;cAAAjB,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5H,CAAC,eACJjB,OAAA;YAAAW,QAAA,gBACEX,OAAA,CAACN,IAAI;cAACmC,EAAE,EAAC,cAAc;cAACD,SAAS,EAAC,iBAAiB;cAAAjB,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,OAAG,eAAAjB,OAAA,CAACN,IAAI;cAACmC,EAAE,EAAC,aAAa;cAACD,SAAS,EAAC,iBAAiB;cAAAjB,QAAA,EAAC;YAAkB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrJ,CAAC,eAGJjB,OAAA;YAAAW,QAAA,EAAI;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAClBrB,eAAe,CAACO,KAAK,EAAEM,cAAc,CAAC,eAGvCT,OAAA;YAAAW,QAAA,EAAI;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBjB,OAAA;YAAM8B,MAAM,EAAC,MAAM;YAACC,MAAM,EAAC,gCAAgC;YAAApB,QAAA,gBACzDX,OAAA;cAAAW,QAAA,EAAO;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBjB,OAAA;cAAOgC,IAAI,EAAC,MAAM;cAACC,IAAI,EAAC,OAAO;cAACC,QAAQ;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3CjB,OAAA;cAAAW,QAAA,EAAO;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBjB,OAAA;cAAOgC,IAAI,EAAC,UAAU;cAACC,IAAI,EAAC,UAAU;cAACC,QAAQ;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClDjB,OAAA;cAAAW,QAAA,EAAO;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBjB,OAAA;cAAOgC,IAAI,EAAC,QAAQ;cAACC,IAAI,EAAC;YAAS;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtCjB,OAAA;cAAQgC,IAAI,EAAC,QAAQ;cAAArB,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAvEuBD,oBAAoB;AAAAkC,EAAA,GAApBlC,oBAAoB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}