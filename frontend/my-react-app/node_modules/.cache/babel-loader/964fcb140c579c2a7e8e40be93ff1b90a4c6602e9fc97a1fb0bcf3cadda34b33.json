{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [profession, setProfession] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [mark, setMark] = useState(null);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\n\n  useEffect(() => {\n    // Fetch profession details\n    fetch(`http://localhost:5000/get_prof/${id}`).then(response => response.json()).then(data => {\n      setProfession(data.profession);\n    }).catch(error => console.error(\"Error fetching profession details:\", error));\n\n    // Fetch test questions\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json()).then(data => {\n      setTestQuestions(data);\n    }).catch(error => console.error(\"Error fetching test questions:\", error));\n  }, [id]);\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: selectedAnswer\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    let correctAnswers = 0;\n    testQuestions.forEach((question, index) => {\n      if (answers[index] === question.correct_answer) {\n        correctAnswers++;\n      }\n    });\n    const calculatedMark = Math.round(correctAnswers / testQuestions.length * 100);\n    setMark(calculatedMark);\n    setCorrectAnswersCount(correctAnswers);\n    setSubmitted(true); // Set submitted to true after form submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [profession && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profession Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession Name: \", profession.profession_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", profession.profession_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [index + 1, \". \", question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(question).slice(0, 4).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: submitted && option === question.correct_answer ? 'green' : 'inherit',\n                fontWeight: submitted && option === question.correct_answer ? 'bold' : 'normal'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question${index}`,\n                value: option,\n                checked: answers[index] === option,\n                onChange: () => handleAnswerChange(index, option),\n                disabled: submitted // Disable input after submission\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, optionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), mark !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mark: \", mark, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswersCount, \"/\", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTestPage, \"1TUVwrynpXLj8Dm49APkiCRxXhU=\", false, function () {\n  return [useParams];\n});\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UserTestPage","_s","id","profession","setProfession","testQuestions","setTestQuestions","answers","setAnswers","mark","setMark","correctAnswersCount","setCorrectAnswersCount","submitted","setSubmitted","fetch","then","response","json","data","catch","error","console","handleAnswerChange","questionIndex","selectedAnswer","handleSubmit","event","preventDefault","correctAnswers","forEach","question","index","correct_answer","calculatedMark","Math","round","length","children","fileName","_jsxFileName","lineNumber","columnNumber","profession_name","profession_description","onSubmit","map","Object","values","slice","option","optionIndex","style","color","fontWeight","type","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function UserTestPage() {\r\n  const { id } = useParams();\r\n  const [profession, setProfession] = useState(null);\r\n  const [testQuestions, setTestQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [mark, setMark] = useState(null);\r\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\r\n\r\n  useEffect(() => {\r\n    // Fetch profession details\r\n    fetch(`http://localhost:5000/get_prof/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProfession(data.profession);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching profession details:\", error));\r\n\r\n    // Fetch test questions\r\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTestQuestions(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching test questions:\", error));\r\n  }, [id]);\r\n\r\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionIndex]: selectedAnswer\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let correctAnswers = 0;\r\n\r\n    testQuestions.forEach((question, index) => {\r\n      if (answers[index] === question.correct_answer) {\r\n        correctAnswers++;\r\n      }\r\n    });\r\n\r\n    const calculatedMark = Math.round((correctAnswers / testQuestions.length) * 100);\r\n    setMark(calculatedMark);\r\n    setCorrectAnswersCount(correctAnswers);\r\n    setSubmitted(true); // Set submitted to true after form submission\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {profession && (\r\n        <div>\r\n          <h2>Profession Details</h2>\r\n          <p>Profession Name: {profession.profession_name}</p>\r\n          <p>Description: {profession.profession_description}</p>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Test Questions</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {testQuestions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{index + 1}. {question.question}</p>\r\n            <ul>\r\n              {Object.values(question).slice(0, 4).map((option, optionIndex) => (\r\n                <li key={optionIndex}>\r\n                  <label \r\n                    style={{\r\n                      color: submitted && option === question.correct_answer ? 'green' : 'inherit',\r\n                      fontWeight: submitted && option === question.correct_answer ? 'bold' : 'normal'\r\n                    }}\r\n                  >\r\n                    <input \r\n                      type=\"radio\" \r\n                      name={`question${index}`} \r\n                      value={option} \r\n                      checked={answers[index] === option} \r\n                      onChange={() => handleAnswerChange(index, option)} \r\n                      disabled={submitted} // Disable input after submission\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" disabled={submitted}>Submit</button>\r\n      </form>\r\n\r\n      {mark !== null && (\r\n        <div>\r\n          <h2>Test Result</h2>\r\n          <p>Mark: {mark}%</p>\r\n          <p>Correct Answers: {correctAnswersCount}/{testQuestions.length}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}