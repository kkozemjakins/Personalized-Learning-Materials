{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserCoursePage.jsx\",\n  _s = $RefreshSig$();\n//UserCoursePage.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport XmlViewer from 'react-xml-viewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = ({\n  userId\n}) => {\n  _s();\n  const [xmlFiles, setXmlFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    const fetchXmlFiles = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/get_user_xml/${userId}`);\n        setXmlFiles(response.data.user_xmls);\n      } catch (error) {\n        console.error('Error fetching XML files:', error);\n      }\n    };\n    fetchXmlFiles();\n  }, [userId]);\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-select\",\n      children: \"Select XML File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"file-select\",\n      onChange: e => handleFileSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose a file...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), xmlFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.name,\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(XmlViewer, {\n      xml: selectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"bKojV6oEJ1lMwzAIjZonu/2jCFQ=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useEffect","useState","axios","XmlViewer","jsxDEV","_jsxDEV","Recommendations","userId","_s","xmlFiles","setXmlFiles","selectedFile","setSelectedFile","fetchXmlFiles","response","get","data","user_xmls","error","console","handleFileSelect","file","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","value","map","index","name","xml","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserCoursePage.jsx"],"sourcesContent":["//UserCoursePage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport XmlViewer from 'react-xml-viewer';\r\n\r\nconst Recommendations = ({ userId }) => {\r\n  const [xmlFiles, setXmlFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchXmlFiles = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/get_user_xml/${userId}`);\r\n        setXmlFiles(response.data.user_xmls);\r\n      } catch (error) {\r\n        console.error('Error fetching XML files:', error);\r\n      }\r\n    };\r\n    fetchXmlFiles();\r\n  }, [userId]);\r\n\r\n  const handleFileSelect = (file) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"file-select\">Select XML File:</label>\r\n      <select id=\"file-select\" onChange={(e) => handleFileSelect(e.target.value)}>\r\n        <option value=\"\">Choose a file...</option>\r\n        {xmlFiles.map((file, index) => (\r\n          <option key={index} value={file.name}>{file.name}</option>\r\n        ))}\r\n      </select>\r\n      {selectedFile && (\r\n        <XmlViewer xml={selectedFile} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,sCAAqCR,MAAO,EAAC,CAAC;QAChFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMa,gBAAgB,GAAIC,IAAI,IAAK;IACjCT,eAAe,CAACS,IAAI,CAAC;EACvB,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAOkB,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrDtB,OAAA;MAAQuB,EAAE,EAAC,aAAa;MAACC,QAAQ,EAAGC,CAAC,IAAKV,gBAAgB,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAV,QAAA,gBACzEjB,OAAA;QAAQ2B,KAAK,EAAC,EAAE;QAAAV,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzClB,QAAQ,CAACwB,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBACxB7B,OAAA;QAAoB2B,KAAK,EAAEX,IAAI,CAACc,IAAK;QAAAb,QAAA,EAAED,IAAI,CAACc;MAAI,GAAnCD,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRhB,YAAY,iBACXN,OAAA,CAACF,SAAS;MAACiC,GAAG,EAAEzB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlCIF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}