{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\Admin\\\\AdminManageProfPage.jsx\",\n  _s = $RefreshSig$();\n// AdminManageProfPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchData, renderListItems, updateUserData, UpdateForm } from \"../Functions/apiUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminManageProfPage = () => {\n  _s();\n  const [professions, setProfessions] = useState([]);\n  const [selectedProfession, setSelectedProfession] = useState(null);\n  const [formData, setFormData] = useState({});\n  const fields = [{\n    name: 'profession_name',\n    label: 'Profession Name',\n    required: true\n  }, {\n    name: 'profession_description',\n    label: 'Description'\n  }];\n  useEffect(() => {\n    fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\n  }, []);\n  const renderProfItem = prof => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"(Profession Name: \", prof.profession_name, \") (Description: \", prof.profession_description, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDeleteProf(prof.id),\n      children: \"Delete Profession\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUpdateProf(prof),\n      children: \"Modify Profession\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, prof.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  const handleDeleteProf = async profId => {\n    try {\n      const response = await fetch(`http://localhost:5000/delete_prof/${profId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\n      } else {\n        console.error('Error deleting profession:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error deleting profession:', error);\n    }\n  };\n  const handleUpdateProf = prof => {\n    setSelectedProfession(prof);\n    setFormData({\n      profession_name: prof.profession_name,\n      profession_description: prof.profession_description\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!selectedProfession) {\n        console.error('No profession selected for update.');\n        return;\n      }\n      const profId = selectedProfession.id;\n      const isUpdated = await updateUserData(profId, formData, \"professions\");\n      if (isUpdated) {\n        fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\n        setSelectedProfession(null);\n        setFormData({});\n      } else {\n        console.error('Error updating profession.');\n      }\n    } catch (error) {\n      console.error('Error updating profession:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to Users and Professions Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"btn btn-success\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \" | \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"btn btn-success\",\n              children: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin_users\",\n              className: \"btn btn-success\",\n              children: \"Manage Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin_prof\",\n              className: \"btn btn-success\",\n              children: \"Manage professions \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin_test\",\n              className: \"btn btn-success\",\n              children: \"Manage tests \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Professions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), renderListItems(professions, renderProfItem), selectedProfession && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Modify Profession: \", selectedProfession.profession_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n              formData: formData,\n              fields: fields,\n              onChange: setFormData,\n              onSubmit: handleFormSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Profession\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            method: \"post\",\n            action: \"http://localhost:5000/add_prof\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profession Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"profession_name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"profession_description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Profession\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminManageProfPage, \"ZdZAq2by4qfCr7FxGY7vvQFtYC8=\");\n_c = AdminManageProfPage;\nexport default AdminManageProfPage;\nvar _c;\n$RefreshReg$(_c, \"AdminManageProfPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchData","renderListItems","updateUserData","UpdateForm","jsxDEV","_jsxDEV","AdminManageProfPage","_s","professions","setProfessions","selectedProfession","setSelectedProfession","formData","setFormData","fields","name","label","required","renderProfItem","prof","children","profession_name","profession_description","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleDeleteProf","id","handleUpdateProf","profId","response","fetch","method","headers","ok","console","error","statusText","handleFormSubmit","e","preventDefault","isUpdated","className","to","onChange","onSubmit","action","type","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/Admin/AdminManageProfPage.jsx"],"sourcesContent":["// AdminManageProfPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchData, renderListItems, updateUserData, UpdateForm } from \"../Functions/apiUtils\";\r\n\r\nconst AdminManageProfPage = () => {\r\n  const [professions, setProfessions] = useState([]);\r\n  const [selectedProfession, setSelectedProfession] = useState(null);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const fields = [\r\n    { name: 'profession_name', label: 'Profession Name', required: true },\r\n    { name: 'profession_description', label: 'Description' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\r\n  }, []);\r\n\r\n  const renderProfItem = (prof) => (\r\n    <div key={prof.id}>\r\n      <p>(Profession Name: {prof.profession_name}) (Description: {prof.profession_description})</p>\r\n      <button onClick={() => handleDeleteProf(prof.id)}>Delete Profession</button>\r\n      <button onClick={() => handleUpdateProf(prof)}>Modify Profession</button>\r\n    </div>\r\n  );\r\n\r\n  const handleDeleteProf = async (profId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/delete_prof/${profId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\r\n      } else {\r\n        console.error('Error deleting profession:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profession:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProf = (prof) => {\r\n    setSelectedProfession(prof);\r\n    setFormData({\r\n      profession_name: prof.profession_name,\r\n      profession_description: prof.profession_description,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (!selectedProfession) {\r\n        console.error('No profession selected for update.');\r\n        return;\r\n      }\r\n\r\n      const profId = selectedProfession.id;\r\n      const isUpdated = await updateUserData(profId, formData, \"professions\");\r\n\r\n      if (isUpdated) {\r\n        fetchData(\"http://localhost:5000/get_prof\", setProfessions, \"professions\");\r\n        setSelectedProfession(null);\r\n        setFormData({});\r\n      } else {\r\n        console.error('Error updating profession.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profession:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-12\">\r\n            <h1>Welcome to Users and Professions Manage</h1>\r\n            <p>\r\n              <Link to=\"/login\" className=\"btn btn-success\">Login</Link> | <Link to=\"/register\" className=\"btn btn-success\">register</Link>\r\n            </p>\r\n            <p>\r\n              <Link to=\"/admin_users\" className=\"btn btn-success\">Manage Users</Link>\r\n              <Link to=\"/admin_prof\" className=\"btn btn-success\">Manage professions </Link>\r\n              <Link to=\"/admin_test\" className=\"btn btn-success\">Manage tests </Link>\r\n            </p>\r\n\r\n            {/* Display Professions */}\r\n            <h2>Professions List</h2>\r\n            {renderListItems(professions, renderProfItem)}\r\n\r\n            {/* Modify Profession Form */}\r\n            {selectedProfession && (\r\n              <div>\r\n                <h2>Modify Profession: {selectedProfession.profession_name}</h2>\r\n                <UpdateForm formData={formData} fields={fields} onChange={setFormData} onSubmit={handleFormSubmit} />\r\n              </div>\r\n            )}\r\n\r\n            {/* Add New Profession Form */}\r\n            <h2>Add New Profession</h2>\r\n            <form method=\"post\" action=\"http://localhost:5000/add_prof\">\r\n              <label>Profession Name:</label>\r\n              <input type=\"text\" name=\"profession_name\" required />\r\n              <label>Description:</label>\r\n              <input type=\"text\" name=\"profession_description\" />\r\n              <button type=\"submit\">Add Profession</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminManageProfPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}