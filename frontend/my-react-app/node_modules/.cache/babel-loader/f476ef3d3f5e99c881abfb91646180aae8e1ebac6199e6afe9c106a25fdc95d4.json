{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\Functions\\\\apiUtils.jsx\",\n  _s = $RefreshSig$();\n// apiUtils.js\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const fetchData = async (url, setData) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (Array.isArray(data[\"Professions\"])) {\n      setData(data[\"Professions\"]);\n    }\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n  }\n};\nexport const renderListItems = (items, renderFunction) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: Array.isArray(items) ? items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: renderFunction(item)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this)) : null\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\nexport const renderListItemsWithAction = (items, renderFunction, handleDelete, handleModify) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: Array.isArray(items) ? items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: renderFunction(item, handleDelete, handleModify)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this)) : null\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\nexport const updateUserData = async (userId, updatedUserData, setData, dataKey) => {\n  try {\n    const response = await fetch(`http://localhost:5000/update_user/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedUserData)\n    });\n    if (response.ok) {\n      fetchData(`http://localhost:5000/get_${dataKey}`, setData, dataKey);\n      return true; // Successful update\n    } else {\n      console.error(`Error updating ${dataKey}:`, response.statusText);\n      return false;\n    }\n  } catch (error) {\n    console.error(`Error updating ${dataKey}:`, error);\n    return false;\n  }\n};\nexport const updateTestData = async (questionId, updatedQuestionData, setData, dataKey) => {\n  try {\n    const response = await fetch(`http://localhost:5000/update_test_questions/${questionId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedQuestionData)\n    });\n    if (response.ok) {\n      fetchData(`http://localhost:5000/get_${dataKey}`, setData, dataKey);\n      return true; // Successful update\n    } else {\n      console.error(`Error updating ${dataKey}:`, response.statusText);\n      return false;\n    }\n  } catch (error) {\n    console.error(`Error updating ${dataKey}:`, error);\n    return false;\n  }\n};\nexport const UpdateForm = ({\n  formData,\n  fields,\n  onChange,\n  onSubmit\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: onSubmit,\n  children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [field.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: field.type || 'text',\n      name: field.name,\n      value: formData[field.name] || '',\n      onChange: e => onChange({\n        ...formData,\n        [field.name]: e.target.value\n      }),\n      required: field.required || false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, field.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    children: \"Update\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this);\n_c = UpdateForm;\nexport default UpdateForm;\nexport const useUserRoleAccess = requiredUserRole => {\n  _s();\n  const navigate = useNavigate();\n  const checkUserRoleAccess = () => {\n    const isLoggedIn = sessionStorage.getItem(\"user_id\");\n    const userRole = sessionStorage.getItem(\"user_role\");\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n      return false;\n    }\n    if (parseInt(userRole) !== requiredUserRole) {\n      navigate(\"/login\"); // Redirect to login if user role does not match\n      return false;\n    }\n    return true;\n  };\n  return checkUserRoleAccess;\n};\n_s(useUserRoleAccess, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nvar _c;\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","fetchData","url","setData","response","fetch","data","json","Array","isArray","error","console","renderListItems","items","renderFunction","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","renderListItemsWithAction","handleDelete","handleModify","updateUserData","userId","updatedUserData","dataKey","method","headers","body","JSON","stringify","ok","statusText","updateTestData","questionId","updatedQuestionData","UpdateForm","formData","fields","onChange","onSubmit","field","label","type","name","value","e","target","required","_c","useUserRoleAccess","requiredUserRole","_s","navigate","checkUserRoleAccess","isLoggedIn","sessionStorage","getItem","userRole","parseInt","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/Functions/apiUtils.jsx"],"sourcesContent":["// apiUtils.js\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport const fetchData = async (url, setData) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (Array.isArray(data[\"Professions\"])) {\r\n      setData(data[\"Professions\"]);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching data from ${url}:`, error);\r\n  }\r\n};\r\n\r\n\r\nexport const renderListItems = (items, renderFunction) => (\r\n  <ul>\r\n    {Array.isArray(items) ? items.map((item) => (\r\n      <li key={item.id}>{renderFunction(item)}</li>\r\n    )) : null}\r\n  </ul>\r\n);\r\n\r\nexport const renderListItemsWithAction = (items, renderFunction, handleDelete, handleModify) => (\r\n  <ul>\r\n    {Array.isArray(items) ? items.map((item) => (\r\n      <li key={item.id}>\r\n        {renderFunction(item, handleDelete, handleModify)}\r\n      </li>\r\n    )) : null}\r\n  </ul>\r\n);\r\n\r\nexport const updateUserData = async (userId, updatedUserData, setData, dataKey) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/update_user/${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedUserData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchData(`http://localhost:5000/get_${dataKey}`, setData, dataKey);\r\n      return true; // Successful update\r\n    } else {\r\n      console.error(`Error updating ${dataKey}:`, response.statusText);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error updating ${dataKey}:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const updateTestData = async (questionId, updatedQuestionData, setData, dataKey) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/update_test_questions/${questionId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedQuestionData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchData(`http://localhost:5000/get_${dataKey}`, setData, dataKey);\r\n      return true; // Successful update\r\n    } else {\r\n      console.error(`Error updating ${dataKey}:`, response.statusText);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error updating ${dataKey}:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const UpdateForm = ({ formData, fields, onChange, onSubmit }) => (\r\n  <form onSubmit={onSubmit}>\r\n    {fields.map((field) => (\r\n      <div key={field.name}>\r\n        <label>{field.label}:</label>\r\n        <input\r\n          type={field.type || 'text'}\r\n          name={field.name}\r\n          value={formData[field.name] || ''}\r\n          onChange={(e) => onChange({ ...formData, [field.name]: e.target.value })}\r\n          required={field.required || false}\r\n        />\r\n      </div>\r\n    ))}\r\n    <button type=\"submit\">Update</button>\r\n  </form>\r\n);\r\n\r\nexport default UpdateForm;\r\n\r\n\r\nexport const useUserRoleAccess = (requiredUserRole) => {\r\n  const navigate = useNavigate();\r\n\r\n  const checkUserRoleAccess = () => {\r\n      const isLoggedIn = sessionStorage.getItem(\"user_id\");\r\n      const userRole = sessionStorage.getItem(\"user_role\");\r\n\r\n      if (!isLoggedIn) {\r\n          navigate(\"/login\");\r\n          return false;\r\n      }\r\n\r\n      if (parseInt(userRole) !== requiredUserRole) {\r\n          navigate(\"/login\"); // Redirect to login if user role does not match\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n  };\r\n\r\n  return checkUserRoleAccess;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}