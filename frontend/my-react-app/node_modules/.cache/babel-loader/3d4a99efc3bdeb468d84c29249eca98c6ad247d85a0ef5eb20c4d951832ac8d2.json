{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserCoursePage.jsx\",\n  _s = $RefreshSig$();\n//UserCoursePage.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport XmlViewer from 'react-xml-viewer'; // Change import to default\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [selectedXml, setSelectedXml] = useState(null);\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_all_xmls');\n        setRecommendations(response.data); // Assuming response.data is an array of XML files\n      } catch (error) {\n        console.error('Error fetching XML files:', error);\n      }\n    };\n    fetchRecommendations();\n  }, []);\n  const handleXmlSelect = async xml => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_xml_content/${xml}`);\n      setSelectedXml(response.data);\n    } catch (error) {\n      console.error('Error fetching XML content:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"XML Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleXmlSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an XML file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), recommendations.map((xml, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: xml,\n        children: xml\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedXml && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"XML Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XmlViewer, {\n          xml: selectedXml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"X7JW+4Q3ul7aal/+VJqG8lHQ8ps=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useEffect","useState","axios","XmlViewer","jsxDEV","_jsxDEV","Recommendations","_s","recommendations","setRecommendations","selectedXml","setSelectedXml","fetchRecommendations","response","get","data","error","console","handleXmlSelect","xml","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","index","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserCoursePage.jsx"],"sourcesContent":["//UserCoursePage.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport XmlViewer from 'react-xml-viewer'; // Change import to default\r\n\r\nconst Recommendations = () => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [selectedXml, setSelectedXml] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/get_all_xmls');\r\n        setRecommendations(response.data); // Assuming response.data is an array of XML files\r\n      } catch (error) {\r\n        console.error('Error fetching XML files:', error);\r\n      }\r\n    };\r\n    fetchRecommendations();\r\n  }, []);\r\n\r\n  const handleXmlSelect = async (xml) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/get_xml_content/${xml}`);\r\n      setSelectedXml(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching XML content:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>XML Files</h2>\r\n      <select onChange={(e) => handleXmlSelect(e.target.value)}>\r\n        <option value=\"\">Select an XML file</option>\r\n        {recommendations.map((xml, index) => (\r\n          <option key={index} value={xml}>\r\n            {xml}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <div>\r\n        {selectedXml && (\r\n          <div>\r\n            <h3>XML Content</h3>\r\n            <XmlViewer xml={selectedXml} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}