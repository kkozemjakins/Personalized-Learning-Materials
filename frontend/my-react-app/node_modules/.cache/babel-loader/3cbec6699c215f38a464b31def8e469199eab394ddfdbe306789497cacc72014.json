{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestResultsPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestResultsPage.jsx\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Arrow icons for indicating collapse/expand state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrowDown = \"\\u25BC\";\nconst arrowUp = \"\\u25B2\";\nexport default function UserTestResultsPage() {\n  _s();\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [collapsedTests, setCollapsedTests] = useState({});\n\n  // Define a ref to track previous userId\n  const previousUserId = useRef(null);\n  useEffect(() => {\n    // Fetch user information from session storage or state\n    const userEmailFromStorage = sessionStorage.getItem(\"user_email\");\n    const userIdFromStorage = sessionStorage.getItem(\"user_id\");\n    const userRoleFromStorage = sessionStorage.getItem(\"user_role\");\n    setUserEmail(userEmailFromStorage);\n    setUserId(userIdFromStorage);\n    setUserRole(userRoleFromStorage);\n    if (!userId) {\n      setLoading(false);\n      return;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to this User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User Email: \", userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User Role: \", userRole]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/logout\",\n              className: \"btn btn-success\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), \"| \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user_main\",\n              className: \"btn btn-success\",\n              children: \"Main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), Object.entries(groupedUserAnswers).map(([testId, answers]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              onClick: () => toggleCollapse(testId),\n              children: [collapsedTests[testId] ? arrowDown : arrowUp, \"\\xA0Test ID: \", testId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), !collapsedTests[testId] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"id of result:\", answer.prof_test_results_marks_id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      children: [answer.question_text, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 67\n                    }, this), \" Level: \", answer.question_level]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"User Answer: \", answer.user_answer]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: answer.correct_incorrect === 1 ? \"green\" : \"red\"\n                      },\n                      children: [\"Correct/Incorrect: \", answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 53\n                  }, this), index === answers.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Comment on Result:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 61\n                    }, this), \" \", answer.comment_on_result]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 49\n                }, this)\n              }, answer.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, testId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(UserTestResultsPage, \"qiWKrKszIOp1/1uSy3y0FPI1jno=\");\n_c = UserTestResultsPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestResultsPage\");","map":{"version":3,"names":["useUserRoleAccess","React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","arrowDown","arrowUp","UserTestResultsPage","_s","userEmail","setUserEmail","userId","setUserId","userRole","setUserRole","userAnswers","setUserAnswers","loading","setLoading","error","setError","collapsedTests","setCollapsedTests","previousUserId","userEmailFromStorage","sessionStorage","getItem","userIdFromStorage","userRoleFromStorage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","Object","entries","groupedUserAnswers","map","testId","answers","onClick","toggleCollapse","answer","index","prof_test_results_marks_id","question_text","question_level","user_answer","style","color","correct_incorrect","length","comment_on_result","id","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestResultsPage.jsx"],"sourcesContent":["// UserTestResultsPage.jsx\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Arrow icons for indicating collapse/expand state\r\nconst arrowDown = \"\\u25BC\";\r\nconst arrowUp = \"\\u25B2\";\r\n\r\nexport default function UserTestResultsPage() {\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [userRole, setUserRole] = useState(\"\");\r\n    const [userAnswers, setUserAnswers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [collapsedTests, setCollapsedTests] = useState({});\r\n\r\n    // Define a ref to track previous userId\r\n    const previousUserId = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch user information from session storage or state\r\n        const userEmailFromStorage = sessionStorage.getItem(\"user_email\");\r\n        const userIdFromStorage = sessionStorage.getItem(\"user_id\");\r\n        const userRoleFromStorage = sessionStorage.getItem(\"user_role\");\r\n\r\n        setUserEmail(userEmailFromStorage);\r\n        setUserId(userIdFromStorage);\r\n        setUserRole(userRoleFromStorage);\r\n\r\n        if (!userId) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n    \r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12\">\r\n                        <h1>Welcome to this User</h1>\r\n                        <p>User Email: {userEmail}</p>\r\n                        <p>User ID: {userId}</p>\r\n                        <p>User Role: {userRole}</p>\r\n\r\n                        <p>\r\n                            <Link to=\"/logout\" className=\"btn btn-success\">Logout</Link> \r\n                            | <Link to=\"/user_main\" className=\"btn btn-success\">Main</Link> \r\n                        </p>\r\n\r\n                        {/* Display user answers grouped by prof_test_id */}\r\n                        {Object.entries(groupedUserAnswers).map(([testId, answers]) => (\r\n                            <div key={testId}>\r\n                                <h2 onClick={() => toggleCollapse(testId)}>\r\n                                    {collapsedTests[testId] ? arrowDown : arrowUp}\r\n                                    &nbsp;Test ID: {testId}\r\n                                </h2>\r\n                                {!collapsedTests[testId] && (\r\n                                    <ul>\r\n                                        {answers.map((answer, index) => (\r\n                                            <li key={answer.id}>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        id of result:{answer.prof_test_results_marks_id}\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Question: <i>{answer.question_text} </i> Level: {answer.question_level}\r\n                                                    </li>\r\n                                                    <li>User Answer: {answer.user_answer}</li>\r\n                                                    <li>\r\n                                                        <span style={{ color: answer.correct_incorrect === 1 ? \"green\" : \"red\" }}>\r\n                                                            Correct/Incorrect: {answer.correct_incorrect === 1 ? \"Correct\" : \"Incorrect\"}\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    {index === answers.length - 1 && (\r\n                                                        <div>\r\n                                                            <p>Comment on Result:</p> {answer.comment_on_result}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </ul>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}