{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [testQuestions, setTestQuestions] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json()).then(data => {\n      setTestQuestions(data);\n    }).catch(error => console.error(\"Error fetching test questions:\", error));\n  }, [id]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    // You can implement submission logic here, e.g., checking answers\n    console.log(\"Form submitted!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [index + 1, \". \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(question).slice(0, 4).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question${index}`,\n              value: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTestPage, \"Hed3P1urK1js2naW06MJnBLvZNc=\", false, function () {\n  return [useParams];\n});\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UserTestPage","_s","id","testQuestions","setTestQuestions","fetch","then","response","json","data","catch","error","console","handleSubmit","event","preventDefault","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","Object","values","slice","option","optionIndex","type","name","value","onClick","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function UserTestPage() {\r\n  const { id } = useParams();\r\n  const [testQuestions, setTestQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTestQuestions(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching test questions:\", error));\r\n  }, [id]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // You can implement submission logic here, e.g., checking answers\r\n    console.log(\"Form submitted!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Questions</h2>\r\n      {testQuestions.map((question, index) => (\r\n        <div key={index}>\r\n          <p>{index + 1}. {question.question}</p>\r\n          <ul>\r\n            {Object.values(question).slice(0, 4).map((option, optionIndex) => (\r\n              <li key={optionIndex}>\r\n                <label>\r\n                  <input type=\"radio\" name={`question${index}`} value={option} />\r\n                  {option}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,0DAAyDH,EAAG,EAAC,CAAC,CAClEI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,gBAAgB,CAACK,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAH,OAAO,CAACI,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBlB,aAAa,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACjCzB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,GAAIO,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,QAAQ,CAACA,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCtB,OAAA;QAAAkB,QAAA,EACGQ,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACL,GAAG,CAAC,CAACM,MAAM,EAAEC,WAAW,kBAC3D9B,OAAA;UAAAkB,QAAA,eACElB,OAAA;YAAAkB,QAAA,gBACElB,OAAA;cAAO+B,IAAI,EAAC,OAAO;cAACC,IAAI,EAAG,WAAUP,KAAM,EAAE;cAACQ,KAAK,EAAEJ;YAAO;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9DO,MAAM;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC,GAJDQ,WAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GAXGG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CACN,CAAC,eACFtB,OAAA;MAAQkC,OAAO,EAAEpB,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACpB,EAAA,CAxCuBD,YAAY;EAAA,QACnBH,SAAS;AAAA;AAAAqC,EAAA,GADFlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}