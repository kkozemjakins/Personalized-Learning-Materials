{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserCoursePage.jsx\",\n  _s = $RefreshSig$();\n// UserCoursePage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\nimport { getUserInfo } from \"../Functions/authUtils\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCoursePage = () => {\n  _s();\n  const [xmlData, setXmlData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch user info\n  const {\n    userRole\n  } = getUserInfo();\n\n  // Check user role access\n  const checkUserRoleAccess = useUserRoleAccess(0); // Assuming 2 is the required role for accessing XML files\n\n  useEffect(() => {\n    const fetchXmlData = async () => {\n      try {\n        // Check user role access\n        const hasAccess = checkUserRoleAccess();\n        if (!hasAccess) {\n          // User does not have access, redirect or show error message\n          setError(\"You don't have permission to access this page.\");\n          return;\n        }\n\n        // Fetch XML files\n        const response = await axios.get(\"/get_user_xml/:user_id\"); // Replace :user_id with actual user ID\n        setXmlData(response.data.user_xmls);\n      } catch (error) {\n        setError(\"Error fetching XML data.\");\n      }\n    };\n    fetchXmlData();\n  }, [checkUserRoleAccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Course Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), xmlData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"XML Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), xmlData.map((xml, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: xml.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: xml.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UserCoursePage, \"8bjWiQoeLC4D7PMhZa0MmzdKB0Q=\", false, function () {\n  return [useUserRoleAccess];\n});\n_c = UserCoursePage;\nexport default UserCoursePage;\nvar _c;\n$RefreshReg$(_c, \"UserCoursePage\");","map":{"version":3,"names":["React","useEffect","useState","useUserRoleAccess","getUserInfo","axios","jsxDEV","_jsxDEV","UserCoursePage","_s","xmlData","setXmlData","error","setError","userRole","checkUserRoleAccess","fetchXmlData","hasAccess","response","get","data","user_xmls","children","fileName","_jsxFileName","lineNumber","columnNumber","map","xml","index","name","description","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserCoursePage.jsx"],"sourcesContent":["// UserCoursePage.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\nimport { getUserInfo } from \"../Functions/authUtils\";\r\nimport axios from \"axios\";\r\n\r\nconst UserCoursePage = () => {\r\n  const [xmlData, setXmlData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch user info\r\n  const { userRole } = getUserInfo();\r\n\r\n  // Check user role access\r\n  const checkUserRoleAccess = useUserRoleAccess(0); // Assuming 2 is the required role for accessing XML files\r\n\r\n  useEffect(() => {\r\n    const fetchXmlData = async () => {\r\n      try {\r\n        // Check user role access\r\n        const hasAccess = checkUserRoleAccess();\r\n\r\n        if (!hasAccess) {\r\n          // User does not have access, redirect or show error message\r\n          setError(\"You don't have permission to access this page.\");\r\n          return;\r\n        }\r\n\r\n        // Fetch XML files\r\n        const response = await axios.get(\"/get_user_xml/:user_id\"); // Replace :user_id with actual user ID\r\n        setXmlData(response.data.user_xmls);\r\n      } catch (error) {\r\n        setError(\"Error fetching XML data.\");\r\n      }\r\n    };\r\n\r\n    fetchXmlData();\r\n  }, [checkUserRoleAccess]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Course Page</h1>\r\n      {error && <p>{error}</p>}\r\n      {xmlData && (\r\n        <div>\r\n          <h2>XML Files</h2>\r\n          {xmlData.map((xml, index) => (\r\n            <div key={index}>\r\n              <h3>{xml.name}</h3>\r\n              <p>{xml.description}</p>\r\n              {/* Render other XML data here */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCoursePage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM;IAAEY;EAAS,CAAC,GAAGV,WAAW,CAAC,CAAC;;EAElC;EACA,MAAMW,mBAAmB,GAAGZ,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElDF,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,SAAS,GAAGF,mBAAmB,CAAC,CAAC;QAEvC,IAAI,CAACE,SAAS,EAAE;UACd;UACAJ,QAAQ,CAAC,gDAAgD,CAAC;UAC1D;QACF;;QAEA;QACA,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAC5DR,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;MACrC,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdC,QAAQ,CAAC,0BAA0B,CAAC;MACtC;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,mBAAmB,CAAC,CAAC;EAEzB,oBACER,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBd,KAAK,iBAAIL,OAAA;MAAAe,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBhB,OAAO,iBACNH,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBhB,OAAO,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBtB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAKM,GAAG,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBnB,OAAA;UAAAe,QAAA,EAAIM,GAAG,CAACG;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnDID,cAAc;EAAA,QAQUL,iBAAiB;AAAA;AAAA6B,EAAA,GARzCxB,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}