{"ast":null,"code":"var _jsxFileName = \"D:\\\\PiereLV\\\\PythonEdSystem\\\\FlaskProject\\\\Personalized learning materials\\\\frontend\\\\my-react-app\\\\src\\\\components\\\\pages\\\\User\\\\UserTestPage.jsx\",\n  _s = $RefreshSig$();\n// UserTestPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router\";\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserTestPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useNavigate();\n  const [userId, setUserId] = useState(\"\"); // State to store user ID\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\n  const [userRole, setUserRole] = useState(\"\"); // State to store user role\n  const [profession, setProfession] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [mark, setMark] = useState(null);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\n\n  const location = useLocation();\n  const {\n    email,\n    id: userIdFromLocation,\n    role\n  } = location.state || {}; // Extract user data from location state\n\n  const checkUserRoleAccess = useUserRoleAccess(0);\n  useEffect(() => {\n    // Check user role access\n    if (!checkUserRoleAccess()) {\n      history.push(\"/login\"); // Redirect to login if access is not granted\n      return;\n    }\n\n    // Fetch profession details\n    fetch(`http://localhost:5000/get_prof/${id}`).then(response => response.json()).then(data => {\n      setProfession(data.profession);\n    }).catch(error => console.error(\"Error fetching profession details:\", error));\n\n    // Fetch test questions\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`).then(response => response.json()).then(data => {\n      setTestQuestions(data);\n    }).catch(error => console.error(\"Error fetching test questions:\", error));\n\n    // Set userId and userEmail\n    setUserId(userIdFromLocation);\n    setUserEmail(email);\n    setUserRole(role);\n  }, [id, userIdFromLocation, email, role, history, checkUserRoleAccess]);\n\n  // Function to handle radio button change\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: selectedAnswer\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    let correctAnswers = 0;\n\n    // Count correct answers\n    testQuestions.forEach((question, index) => {\n      if (answers[index] === question.correct_answer) {\n        correctAnswers++;\n      }\n    });\n    const calculatedMark = Math.round(correctAnswers / testQuestions.length * 100);\n\n    // Prepare data to send to backend\n    const testData = {\n      prof_test_id: id,\n      user_id: userId,\n      mark: calculatedMark,\n      correct_answers_amount: correctAnswers,\n      incorrect_answers_amount: testQuestions.length - correctAnswers,\n      comment_on_results: \"Any comment you want to add\"\n    };\n\n    // Send test results to backend\n    fetch(\"http://localhost:5000/save_test_results\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(testData)\n    }).then(response => response.json()).then(data => {\n      console.log(data.message); // Handle success message\n    }).catch(error => {\n      console.error(\"Error saving test results:\", error);\n    });\n\n    // Update state\n    setMark(calculatedMark);\n    setCorrectAnswersCount(correctAnswers);\n    setSubmitted(true); // Set submitted to true after form submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to this User, \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", userRole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), profession && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profession Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profession Name: \", profession.profession_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", profession.profession_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [testQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [index + 1, \". \", question.question, \" Level: \", question.level_of_question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(question).slice(0, 4).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: submitted && option === question.correct_answer ? 'green' : submitted && answers[index] !== option ? 'red' : 'inherit'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question${index}`,\n                value: option,\n                checked: answers[index] === option,\n                onChange: () => handleAnswerChange(index, option),\n                disabled: submitted // Disable input after submission\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), submitted && answers[index] !== option && option === question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'green'\n              },\n              children: \" \\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), submitted && answers[index] === option && option !== question.correct_answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \" x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), mark !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mark: \", mark, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswersCount, \"/\", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTestPage, \"HSXNBTkkwnzDCBJ2f6EtXzsyzkE=\", false, function () {\n  return [useParams, useNavigate, useLocation, useUserRoleAccess];\n});\n_c = UserTestPage;\nvar _c;\n$RefreshReg$(_c, \"UserTestPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useNavigate","useUserRoleAccess","jsxDEV","_jsxDEV","UserTestPage","_s","id","history","userId","setUserId","userEmail","setUserEmail","userRole","setUserRole","profession","setProfession","testQuestions","setTestQuestions","answers","setAnswers","mark","setMark","correctAnswersCount","setCorrectAnswersCount","submitted","setSubmitted","location","email","userIdFromLocation","role","state","checkUserRoleAccess","push","fetch","then","response","json","data","catch","error","console","handleAnswerChange","questionIndex","selectedAnswer","handleSubmit","event","preventDefault","correctAnswers","forEach","question","index","correct_answer","calculatedMark","Math","round","length","testData","prof_test_id","user_id","correct_answers_amount","incorrect_answers_amount","comment_on_results","method","headers","body","JSON","stringify","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","profession_name","profession_description","onSubmit","map","level_of_question","Object","values","slice","option","optionIndex","style","color","type","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["D:/PiereLV/PythonEdSystem/FlaskProject/Personalized learning materials/frontend/my-react-app/src/components/pages/User/UserTestPage.jsx"],"sourcesContent":["// UserTestPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router\";\r\n\r\nimport { useUserRoleAccess } from \"../Functions/apiUtils\";\r\n\r\nexport default function UserTestPage() {\r\n  const { id } = useParams();\r\n  const history = useNavigate();\r\n  const [userId, setUserId] = useState(\"\"); // State to store user ID\r\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\r\n  const [userRole, setUserRole] = useState(\"\"); // State to store user role\r\n  const [profession, setProfession] = useState(null);\r\n  const [testQuestions, setTestQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [mark, setMark] = useState(null);\r\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false); // Track if form has been submitted\r\n\r\n  const location = useLocation();\r\n  const { email, id: userIdFromLocation, role } = location.state || {}; // Extract user data from location state\r\n\r\n  const checkUserRoleAccess = useUserRoleAccess(0);\r\n\r\n  useEffect(() => {\r\n    // Check user role access\r\n    if (!checkUserRoleAccess()) {\r\n      history.push(\"/login\"); // Redirect to login if access is not granted\r\n      return;\r\n    }\r\n\r\n    // Fetch profession details\r\n    fetch(`http://localhost:5000/get_prof/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProfession(data.profession);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching profession details:\", error));\r\n\r\n    // Fetch test questions\r\n    fetch(`http://localhost:5000/get_test_questions_by_profession/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTestQuestions(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching test questions:\", error));\r\n\r\n    // Set userId and userEmail\r\n    setUserId(userIdFromLocation);\r\n    setUserEmail(email);\r\n    setUserRole(role);\r\n  }, [id, userIdFromLocation, email, role, history, checkUserRoleAccess]);\r\n\r\n  // Function to handle radio button change\r\n  const handleAnswerChange = (questionIndex, selectedAnswer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionIndex]: selectedAnswer\r\n    });\r\n  };\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let correctAnswers = 0;\r\n\r\n    // Count correct answers\r\n    testQuestions.forEach((question, index) => {\r\n      if (answers[index] === question.correct_answer) {\r\n        correctAnswers++;\r\n      }\r\n    });\r\n\r\n    const calculatedMark = Math.round((correctAnswers / testQuestions.length) * 100);\r\n\r\n    // Prepare data to send to backend\r\n    const testData = {\r\n      prof_test_id: id,\r\n      user_id: userId,\r\n      mark: calculatedMark,\r\n      correct_answers_amount: correctAnswers,\r\n      incorrect_answers_amount: testQuestions.length - correctAnswers,\r\n      comment_on_results: \"Any comment you want to add\"\r\n    };\r\n\r\n    // Send test results to backend\r\n    fetch(\"http://localhost:5000/save_test_results\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(testData)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data.message); // Handle success message\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error saving test results:\", error);\r\n    });\r\n\r\n    // Update state\r\n    setMark(calculatedMark);\r\n    setCorrectAnswersCount(correctAnswers);\r\n    setSubmitted(true); // Set submitted to true after form submission\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to this User, {userEmail}</h1>\r\n      <p>User ID: {userId}</p>\r\n      <p>User Role: {userRole}</p>\r\n      {profession && (\r\n        <div>\r\n          <h2>Profession Details</h2>\r\n          <p>Profession Name: {profession.profession_name}</p>\r\n          <p>Description: {profession.profession_description}</p>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Test Questions</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {testQuestions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{index + 1}. {question.question} Level: {question.level_of_question}</p>\r\n            <ul>\r\n              {Object.values(question).slice(0, 4).map((option, optionIndex) => (\r\n                <li key={optionIndex}>\r\n                  <label style={{ color: submitted && option === question.correct_answer ? 'green' : (submitted && answers[index] !== option ? 'red' : 'inherit') }}>\r\n                    <input \r\n                      type=\"radio\" \r\n                      name={`question${index}`} \r\n                      value={option} \r\n                      checked={answers[index] === option} \r\n                      onChange={() => handleAnswerChange(index, option)} \r\n                      disabled={submitted} // Disable input after submission\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                  {submitted && answers[index] !== option && option === question.correct_answer && (\r\n                    <span style={{ color: 'green' }}> ✓</span>\r\n                  )}\r\n                  {submitted && answers[index] === option && option !== question.correct_answer && (\r\n                    <span style={{ color: 'red' }}> x</span>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" disabled={submitted}>Submit</button>\r\n      </form>\r\n\r\n      {mark !== null && (\r\n        <div>\r\n          <h2>Test Result</h2>\r\n          <p>Mark: {mark}%</p>\r\n          <p>Correct Answers: {correctAnswersCount}/{testQuestions.length}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}